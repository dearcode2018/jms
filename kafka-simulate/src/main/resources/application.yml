
server:
  port: 7070
 
  servlet:
    context-path: /
 
spring:
  application:
    name: 
  profiles:
    active:
    - dev

  autoconfigure:
    exclude:
    - 

  http:
    log-request-details: true

# spring.devtools.restart.enabled 禁用devtools自动重启功能，直接用IDE的热部署
  devtools:
    restart:
    # dev模式下，修改配置，需要打开该功能配置-重启，配置才能生效
    # 不过在云配置体系下，该功能用不上，只是在小型研究项目中使用到
    # 频繁重启，对大型工程来说效率较低，因此会采用云配置实时生效的方式    
      enabled: true
      additional-paths:
      - src/main/java

  # 消息发布/订阅配置
  kafka:
    # 生产/消费者共用Kafka集群
    bootstrap-servers: 192.168.5.11:9090
    template:
      default-topic: haha1
    # 生产者
    producer: 
      #bootstrap-servers: 
      # 
      client-id: producer001
      # -1(或all),0,1,min.insync.replicas指定最小副本数量
      #acks: all
      acks: 1
      # 尝试次数
      retries: 1
      # none，gzip，snappy，lz4，或zstd
      compression-type: gzip
      # 批量大小
      batch-size: 64KB
#      batch-size: 
#        negative: true
#      # 批处理累积数据大小
#      buffer-memory: 
#       negative: true
      # 非空开启事务支持
      #transaction-id-prefix: tx_
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  
    # 消费者 
    consumer:
      #auto-commit-interval:
      #max-poll-records: 
      #bootstrap-servers: 
      # 心跳间隔，消费者组和Kafka协调器的心跳，多久重新分配分区(assign 和 revoke)
      # 不能大于 session.timeout.ms=3000 (默认3000毫秒)
      heartbeat-interval: 3000
      # 自动重置偏移: earliest-从最早开始. lastest: 最后一个/最新的开始
      auto-offset-reset: latest
      # 消费者组，Kafka根据消费者组id存储偏移
      group-id: consumerGroup001
      # 客户端标识，用于日志，在(消费者)集群中唯一
      client-id: consumer_001
      # 是否在后台自动提交消费者偏移量
      enable-auto-commit: false
      #value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties: 
        #spring.json.add.type.headers: false
        # *: 匹配所有包，多个包名用逗号隔开，不支持包名加*的方式
        spring.json.trusted.packages: com.hua.entity
         
        # 信任所有包
        #spring.json.trusted.packages: '*'
        # 信任的包
        # spring.json.trusted.packages: com.hua.entity,com.hua.bean
        #spring.json.value.default.type: com.example.Invoice
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 使用Json反序列化，需要配置信任包: spring.kafka.consumer.properties[spring.json.trusted.packages]
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # 反序列化为字符串
      #value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

 # 数据源
datasource: 
  first: 
    jdbc-url: 'jdbc:mysql://127.0.0.1:3306/db_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai'
    username: root
    password: 'root'
    driver-class-name: com.mysql.jdbc.Driver
    auto-commit: false
    idle-timeout: 180000
    maximum-pool-size: 2000
    minimum-idle: 100
    connection-timeout: 10000
    connection-test-query: SELECT 1
    
  second: 
    jdbc-url: 'jdbc:mysql://127.0.0.1:3306/db_02?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai'
    username: root
    password: 'root'
    driver-class-name: com.mysql.jdbc.Driver
    auto-commit: false
    idle-timeout: 180000
    maximum-pool-size: 2000
    minimum-idle: 100
    connection-timeout: 10000
    connection-test-query: SELECT 1


